AWS - 

Tasks:
  We develop - CODING 
     build, 
     test, 
     monitor, 
     secure, 
     backup and 
     deployment 
  applications

Platforms:   Platform Engineer ( Linux )
             Multi- Platform Engineer (Linux/WINDOWS/Solaris/mcOS)

Platform Engineer - Linux understands how to run tasks on Linux OS/Platform.
Platform Engineer - WINDOWS understands how to run tasks on Windows OS/Platform.
Multi- Platform Engineer understands how to run tasks on Multi- OS/Platforms  

Jira is used for Ticketing and bug tracking:
We work in an agile environment.
Ticket: Install and configure Jenkins Server??? 10wd 
  3. which platform do you want me to use?
        --- Linux OS [70%]
        --- WINDOWS  [20%]
            others    [10%]

Tesla: Install Jenkins on Windows & Solaris Platforms
We can develop, build, test, monitor, secure, 
    backup and deploy applications
  development:
    CODING === IDEs [vscode, Eclipse], [Pycharm, ]
    versioning  === git, svn,   
    SCM ===  [github, gitlab, bitBucket]

  Testing: === [Selenium,] 
  build: MAVEN/Gradle/ANt  [javaProjects]  
  UNitTesting: JUNit 
  SonarQube: CodeQuality Analysis [standards vs actual results ] 
  Sonatype Nexus / JFrog: 
  Jenkins: CI/CD automation 
  Tomcat: 
  webserver - nginx: users ---> nginx1/nginx2 ---> tomcat ----> database  
  server monitoring / Applications performance monitoring: NewRelic      

Linux is a secured Open source OS:
1.  Linux -- Distributions 
      Redhat -- Redhat (8,6,7)
      CentOS -- 
      UBUNTU
      Alpine 
      amazon LINUX 2/1
  
Managing Linux OS or running tasks on Linux Platforms: 
  Run levels ---- 1, 2, 3, 4, 5, 6
   Run level 5 Multi user:  
      Graphical User Interface (GUI) - 
      Commands- CLI 

   Run level 3 - Multi user (CLI) : 
    Commands- CLI :
       Linux Commands 
       Shell SCRIPTING 
       ec2-user / simon / landmark

   Run level 1 - Single user (CLI) :  9 years  IT experience  
       troubleshooting servers using single-user mode 
       changing the root password   
            admin user = root        

What have we use to access and run tasks on our Linux servers??
   COMMANDS    = CLI 

What are using to access and run tasks on your workstation?? GUI

Workstation: Laptop / Desktop  
Servers:   
  mobaXterm === Helps you to connet to your server as an SSH-CLIENT      

  Laptop (PC):  Run level 5 Multi user
    CentOS (Linux)
       bash / sh / csh /ksh /tsh /zch
       touch class29
    macOS 
       zch
    WINDOWS 

2.  WINDOWS
      Powershell
      GitBash 
Platform Engineer (Linux ):
  creating servers (Virtual Machines in azure/aws/GCP cloud )
  patching servers (yum remove / upgrade / update)
    commissioning [Jenkins-2.360, openJDK11, git27 ] & 
    decommissioning servers
    recommissioning servers [Jenkins-2.370, openJDK16, git28.0.7 ]
  securityMGT/usersMGT/fileMGT/packageMGT  
  volume mgt - LVM (OS +  Storage + applications)
=====================================================
Infrastructure Engineering:
Cloud Engineering/Computing:
--- Requirements to run a Business
       1. capital expenditures  
       2. Factors of production [L,L,C,E]

AWS:
======
on-prem Infrastructure  = we own and manage our Datacenters    
Datacenter:
  1. Applications
  
  2. Database-storage 
  3. OS 
  4. HardWare

CAPEX  = CAPITAL EXPENDITURES
OPEX   = OPERATING EXPENDITURES

Netflix = 
   bring cinema to your homes  
   Movies producers --- 
   aws [100TB CPU / 8TB RAM / 256Vcpus] 
      s3 bucket   = 8 hours  
   ec2 servers  = 2-3 minutes   [$2,000 USD]  
Cloud Infrastructure:
-- AWS  
   GCP cloud    
   AZURE 

       USA --- 
       China  --- 
       Europe    

ISP = Internet Service Provider
PSP = Phone Service producers  
CSP = Cloud Service Provider :
   aws = amazon web services   
   microsoft azure  
   GCP = google cloud platform  
   ibm  
   VMWare Cloud  
   alibaba

   dcs = dominion cloud services  : 
   MLS = morfaw cloud services
       
Cloud Service Provider provide cloud Computing services on demand:
   cloud Computing services includes:
      servers  
      databases  
      storage  
      networking
      web hosting
      applications hosting
      virtualization
      monitoring
      backup
      Data Analytics
      security 
      auditing  
      ticketing, scheduling, systems management and auditing
      Paas, Iaas, SaaS  

CSP: aws, azure, gcp, etc.   
     apple       samsung  
     13promax    s22ultra
     14promax    note22ultra         

           aws           azure                gcp  
servers   ec2instance  VirtualMachines        vm   

                          EC2---:
  Basic Computer  vs      aws-EC2 :

  OS     ----            AMI [amazon Machine image] (OS + Additional Softwares)
     Redhat8/
  Hard Drive             EBS (Elastic Block Store)\
  RAM                    RAM

  CPUs[2, 4, 16 core]    Instance type[t2.mirco, t2.medium]

  Network CARD           IP Addressing 

  Firewall               Security Groups

Laptop:
  i3, 16GB and 4 processors, 1000GB SSD  
  i3, 8GB and 2 processors, 256GB SSD 

  i5, 16GB and 4 processors, 1000GB SSD  
  i5, 8GB and 2 processors, 256GB SSD 

  i7, 8GB and 2 processors, 256GB SSD 
  i9, 

Device name SimonLegah
Processor Intel(R) Core(TM) i9-10885H CPU @ 2.40GHz   2.40 GHz

Installed RAM 32.0 GB (31.7 GB usable)
Device ID 66C2D1E4-51DC-48C1-B52E-62FA89D71094
Product ID  00330-53430-41519-AAOEM
System type 64-bit operating system, x64-based processor
Pen and touch No pen or touch input is available for this display

8GB  

=========================

Amazon Machine Image (AMI):
  1. MY AMI = Golden AMIs  
        Instance summary for 
        i-0859bda0d6e112357 
        TAG = Jenkins
        AMI = Redhat8 + openJDK11+ + jenkins + GIT + PLUGINS  

  2. community = OS only   
       OS  

  3. marketplace  = 
       OS + Softwares  
       os + splunk 
       os + vpn    

User data:
  This is script that can run certain tasks while creating the instance  
 
 #!/bin/bash
 sudo useradd simon  
 sudo yum install httpd -y 
 sudo systemctl start httpd
 sudo systemctl enable httpd 
 sudo echo "DevOps is good" >> /var/www/html/index.html 
 sudo echo "<h1>Welcome To LandmarkTech</h1>" >> /var/www/html/index.html
     
                  The same vpc/network          
                webserver1     webserver2          myLaptop  
public-ip  =  3.85.228.234     34.203.191.140      99.233.53.63  curl ifconfig.co 
              44.201.201.78

private-ip = 172.31.82.198     172.31.90.63        10.0.0.15     ip a / ipconfig  

elastic-ip = 3.215.19.106

myLaptop:
  ssh ec2-user@172.31.90.63  will not work because the are in d/f vpcs   
webserver2:
  ssh ec2-user@172.31.82.198 


    18.234.62.6      172.31.27.198
RDP = 
S=?KS9&yAJ&ztp%e3.=agvLzTMDBTOj)


SONARQUBE:
   http://54.176.76.14:9000/    
Nexus  
   http://52.53.227.31:8191/landmark/repository/tesla-snapshots/   
   http://52.53.227.31:8191/landmark/repository/tesla-releases/
Jenkins  
Tomcat
  http://35.170.249.131:8080/tesla/   

  http://35.170.249.131:8080/tesla/services/employee/getEmployeeDetails  

  http://35.170.249.131:8080/tesla/services/employee/putEmployeeDetails 

  https://boa.com/services/employee/putEmployeeDetails

50 restfulAPI:

restfulAPI:

dbServer:
  ssh -i "key29.pem" ec2-user@172.31.80.100    

https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-using-volumes.html
Creating ebs volume    
Attaching EBS  
Mounting ebs:
    1. lsblk  
   13  sudo file -s /dev/xvdf   
   14  clear
   16  sudo lsblk
   17  sudo mkfs -t xfs /dev/xvdf
   18  clear
   19  sudo mkdir /app
       sudo mkdir /data  
       sudo mkdir /var/lib/jenkins

   20  sudo mount /dev/xvdf /app
       sudo mount /dev/xvdf /data   
       sudo mount /dev/xvdg /var/lib/jenkins

   21  lsblk
 
 Jenkins home dir = /var/lib/jenkins  

 sudo mount /dev/xvdg  /var/lib/jenkins 

storage solutions:
  ebs volume  = block store 
       Required mounting 
       sudo mount /dev/xvdf /app   
  

  efs  volume = file storage
       Required mounting 
       sudo yum install nfs-utils
       NFS port = 2049
  mySQL 
     sudo yum install mysql-server  
     sudo systemctl start mysql.service
        mysql-server version 6.1  - 8.1  

  s3 bucket   = object storage 
     audio / video / pdf / logs / snapshots/ iamges /  files
     artfifacts /    

How do you create and place resources in AWS:
    ec2 instances[webservers, dbServers, appServers]
    s3,
    efs  
    Load Balancers


 ec2  --- 
   EBS = Block storage ebs10G/800GB/ 
   efs = file storage  size *100GB 
   S3  = object storage = logs/pdf/word/audio/videos 
       movies-Netflix
            blackpantar  
            rambo1--20GB   
            rambo2--36GB  
            rambo11--56GB   
            blackLeg--20,000GB / 16TB=16000GB    

AWS storage solution is a Multi-Billion dollar enterprise 

Network Load Balancer 
   USES tcp/udp protocol
Application Load Balancer  
   http/https protocols

System/Server:
============
Layers  === 
OSI Model with layers  

The 7 layers of the OSI model. The layers are: 
  Layer 1—Physical; 
  Layer 2—Data Link; 
  Layer 3—Network; 
  Layer 4—Transport;  -- Network Load Balancer  
  Layer 5—Session; 
  Layer 6—Presentation; 
  Layer 7—Application.

Expalin your experience in Layer4/7 support??  
  users ---> NLB ---->Apps  
  TCP/UDP protocols  =    


Targets are end points that should be grouped[targetGroups]
targetGroups:
  1. webapps [all servers/container running the my web applications]
  2. wfapp [all servers/containers running the my wf applications]
  3. myapp [all servers/container running the my my applications]

LoadBalancer:
  Forwards route traffic to healthy targets  

deploy apps and check if they are healthy:
     The application listen on port 8080  
     curl localhost:8080  

deploy servers and check if they are healthy:
   ping  18.217.243.188 

   3.99.188.224:8080
   35.183.114.80:8080

nlb29-6388dc50379f696b.elb.ca-central-1.amazonaws.com  
nlb29-6388dc50379f696b.elb.ca-central-1.amazonaws.com
  users --->ELB-----> 35.183.114.80:8080|3.99.188.224:8080

http://nlb29-6388dc50379f696b.elb.ca-central-1.amazonaws.com/maven-web-app  

Explain your experience and problems resolved in ELB??    

scp -i ca.pem target/*war  ec2-user@35.183.114.80:/opt/tomcat/webapps   

http://nlb29-6388dc50379f696b.elb.ca-central-1.amazonaws.com/maven-web-app/   

DNS to create:
  aliasName = cName  
  a-records  
  ptr-records  

Route53:
  ds.com   
  dominionapps.net  ---
    sub-domain names  
    app.dominionapps.net
    app.dominionapps.net/maven-web-app
    http://app.dominionapps.net/maven-web-app/
    myapp.dominionapps.net
  c-name records:
  dc.dominionapps.net  --- nlb29-6388dc50379f696b.elb.ca-central-1.amazonaws.com




vpc 
ec2  
s3 bucket 
Route53  
iam   
etc .

codes = files  = IaC  
CONSOLE  
Commands  
codes =  

resource "aws_instance" "app_server" {
  ami           = "ami-830c94e3"
  instance_type = "t2.micro"

  tags = {
    Name = "appServer1"
    Environment = "dev"
  }
}

resource "aws_vpc" "vpc29" {
  cidr          = "10.0.0.0/16"
  tags = {
    Name = "vpc29"
    Environment = "dev"
  }
}

terraform show       
cat statefile 





"F:\2tb\backup1\DESKTOP\D18\boc FORMS\1 pr\OLD\IMM0008ENU_2D - GENERIC WW  amended.pdf"

#!/bin/bash
# Use this script to install tomcat in rehat servers
echo assign a hostname to your server
sudo hostnamectl set-hostname tomcat
# install Java JDK 1.8+ as a pre-requisit for tomcat to run.
cd /opt
sudo yum install git wget -y
sudo yum install java-1.8.0-openjdk-devel -y
# Download tomcat software and extract it.
sudo yum install wget unzip -y
sudo wget https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.68/bin/apache-tomcat-9.0.68.tar.gz
sudo tar -xvf apache-tomcat*
sudo rm apache-tomcat-9.0.68.tar.gz
sudo mv apache-tomcat-9.0.68 tomcat
sudo chmod 777 -R /opt/tomcat
sudo chown ec2-user -R /opt/tomcat
sh /opt/tomcat/bin/startup.sh
# create a soft link to start and stop tomcat
sudo ln -s /opt/tomcat/bin/startup.sh /usr/bin/starttomcat
sudo ln -s /opt/tomcat/bin/shutdown.sh /usr/bin/stoptomcat
starttomcat
sudo su - ec2-user
starttomcat

S3 buckets: OBJECT STORAGE IN AWS  
   videos, audios, pdf, images  
   artfifacts, snapshots,   
   host static websites   
 How to secure data is s3:
    encryption
    nacl 
    policy 

Simon --- works for LT  
   s3://class29  
James WORKS FOR DS  
   s3://class29  

Simon create a file in ebs volume:
  test.txt  
James create a file in ebs volume:
  test.txt  

Global resources/services :
  Route53  
  IAM 
Regional resources/services : 
  efs 
  s3   
  vpc  
  asg  
  elb 
Availability zone resources :
   ec2 instances  
   ebs volume 
   subnets     

Tesla:
  10 aws accounts 
     userName: 
     password:

Dissaster recovery and security   
backup    
AWS Organisation:
  userName= tesla1
  userName= tesla2 
  userName= tesla10
nACL  
usersMgt application for over 50m users   

facebook 

AWS security with IAM:
=====================
Identity and access management
  board a plane  
      identified   access  
    - Chidi    --- Economy     
    - Dominion --- 1st 
    - Olu      --- 1st   

Explain your experience with aws services  
 - IAM, ec2, RDS, ebs, efs, s3, vpc, Route53, eks, ecs, asg, etc. 

AUTHENTICATION
   userName/password 
   token[]
   Multi-factor 
Access management
    User groups [admins,QA, Engineers, managers, directors, developers]
    Users
    Identity providers
    Account settings

AUTHORISATION  
    Roles
    Policies

Access key - Programmatic access:
  Enables an access key ID and secret access key for the 
  AWS API, CLI, SDK, and other development tools.

Password - AWS Management Console access:
  Enables a password that allows users to sign-in to 
  the AWS Management Console. 

Please verify id the new video files are in s3://class29d bucket??
class29_user:
  access key: AKIAVA7MDXUTSNH6DWGD
  Secret access key: 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 
   aws s3 ls  
   aws configure    

API response
Access Denied

domi_user:
  access key: AKIAVA7MDXUT2MXGJTUM
  Secret access key: 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

Linux 6 months
aws --- , azure  

Linux / AWS / AZURE  
===================
$ aws s3 mb s3://class29aaa
make_bucket failed: s3://class29aaa An error occurred 
(AccessDenied) when calling the CreateBucket operation: Access Denied

    aws s3
    aws s3 cp
    aws s3 mb
    aws s3 mv
    aws s3 ls
    aws s3 rb
    aws s3 rm
    aws s3 sync

aws ec2 describe-instances
aws ec2 start-instances --instance-ids i-12345678c
aws ec2 terminate-instances --instance-ids i-12345678c

https://devhints.io/awscli


IAM Policies are attached to "USERS/Groups"     
ROLES are attached to Resources: ec2, s3, ecs, eks 

curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install
aws --version

 https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2.html

tf.sh  
sudo yum install unzip
sudo yum install wget 
wget https://releases.hashicorp.com/terraform/0.13.3/terraform_0.13.3_linux_amd64.zip
sudo unzip terraform_0.13.3_linux_amd64.zip -d /home/ec2-user/terraform_install
vi ~/.bashrc
export PATH=$PATH:/home/ec2-user/terraform_install
source ~/.bashrc
terraform -v


we have manage aws_resources using:
  1. console 
  2. commands = awscli 
  3. IaC with terraform scripts written in HCL   
1. install terraform  
2. create project directory  
3. run the following commands:
     terraform init|validate|fmt|plan|apply|show|destroy  
               import | 
               workspaces  

provider "aws" {
  region = "ca-central-1"
}
resource "aws_vpc" "prod-vpc" {
  cidr_block = "10.0.0.0/26"
  tags = {
    Name = "prod29"
    Env  = "dev"
  }
}
# VPC
resource "aws_vpc" "vpc" {
  cidr_block           = "172.1.0.0/24"
  enable_dns_hostnames = true
  tags = {
    Name = "demo_vpc"
  }
}

